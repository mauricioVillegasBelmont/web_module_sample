import { LitElement } from "lit";


// Definir el tipo constructor genérico
type Constructor<T = {}> = new (...args: any[]) => T;

interface Args {
  [key: string]: number;
}

// class CalculadoraHooks extends LitElement {
const CalculadoraMixin = <T extends Constructor<LitElement>>(BaseClass: T) =>
  class extends BaseClass {
    ROI(args: Args) {
      // "pay" - es el pago mensual (2,000 pesos en este caso).
      // "rate" - es la tasa de interés anual (0.10 en este caso, o 10% anual).
      // "years" - es el número de años de la inversión.
      const { pay, rate, years } = args;
      // "n" - es el número de periodos por año (12, porque las aportaciones son mensuales).
      const t = years;
      const n = 12;
      const r = rate;
      const P = pay;

      const term_2 = r/12;
      const term_1 = Math.pow(1 + (r/n),n*t) -1

      return P * (term_1 / term_2);
    }
    inversionAcumulada(args: Args) {
      // "P" - es el pago mensual (2,000 pesos en este caso).
      // "n" - es el número de periodos por año (12, porque las aportaciones son mensuales).
      // "t" - es el número de años de la inversión.
      const { pay, years } = args;
      const n = 12;
      return n * pay * years;
    }

    currency(currency: number): string {
      return `${new Intl.NumberFormat("es-MX", {
        style: "currency",
        currency: "MXN",
        maximumFractionDigits: 2,
        minimumFractionDigits: 0,
      }).format(currency)}`;
    }

    UDIS(inversion: number): number {
      return inversion * 1.673222857;
    }
    eulerIncrement(args: Args) {
      // "pay" - es el pago mensual (2,000 pesos en este caso).
      // "rate" - es la tasa de interés anual (0.10 en este caso, o 10% anual).
      // "years" - es el número de años de la inversión.
      const { pay, rate, years } = args;
      // "n" - es el número de periodos por año (12, porque las aportaciones son mensuales).
      const A = this.inversionAcumulada(args);
      const B = years;

      const k = 0.6;
      const m = 0.073;
      const fB = k * Math.exp(m * B);
      const C = A * fB;
      return C;
    }
    tabulador(args: Args) {
      const { pay, years } = args;
      const paymentArray = [
        2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500, 6000, 6500, 7000, 7500,
        8000, 8500, 9000, 9500, 10000,
      ];
      const y = paymentArray.indexOf(pay);
      const x = years;
      const tabulador = [
        [
          16273588.43, 20349423.19, 24410382.65, 28486217.41, 32547176.86,
          36623011.63, 40683971.08, 44759805.84, 48820765.3, 52896600.06,
          56957559.51, 61018518.96, 65094353.73, 69170188.49, 73246023.25,
          77306982.71, 81367942.16,
        ], //20
        [
          14846975.43, 18558719.29, 22270463.15, 25982207, 29693950.86,
          33405694.72, 37117438.58, 40829182.43, 44540926.29, 48252670.15,
          51964414.01, 55676157.86, 59387901.72, 63099645.58, 66811389.44,
          70523133.29, 74234877.15,
        ], //21
        [
          13546313.46, 16932891.83, 20305977.85, 23692556.21, 27079134.58,
          30465712.94, 33852291.31, 37238869.67, 40625448.04, 44012026.4,
          47398604.77, 50785183.13, 54171761.5, 57558339.86, 60944918.23,
          64331496.59, 67718074.96,
        ], //22
        [
          12348707.3, 15432671.66, 18516636.02, 21600600.39, 24684564.75,
          27768529.11, 30852493.47, 33936457.83, 37020422.2, 40104386.56,
          43188350.92, 46272315.28, 49356279.64, 52440244.01, 55524208.37,
          58608172.73, 61692137.09,
        ], //23
        [
          11246679.56, 14061408.94, 16876138.31, 19690867.69, 22505597.07,
          25320326.45, 28135055.83, 30949785.21, 33764514.58, 36579243.96,
          39393973.34, 42208702.72, 45023432.1, 47838161.47, 50652890.85,
          53467620.23, 56282349.61,
        ], //24
        [
          10244915.62, 12797403.14, 15349890.65, 17902378.16, 20454865.67,
          23007353.18, 25559840.69, 28112328.2, 30664815.71, 33217303.22,
          35769790.73, 38322278.24, 40874765.75, 43427253.26, 45979740.77,
          48532228.28, 51084715.79,
        ], //25
        [
          9313055.105, 11644093.93, 13975132.75, 16306171.57, 18637210.39,
          20968249.22, 23299288.04, 25630326.86, 27961365.68, 30292404.51,
          32623443.33, 34954482.15, 37285520.97, 39616559.8, 41947598.62,
          44278637.44, 46609676.26,
        ], //26
        [
          8467855.314, 10582176.24, 12707068.77, 14821389.7, 16935710.63,
          19050031.56, 21164352.48, 23278673.41, 25392994.34, 27507315.27,
          29621636.19, 31735957.12, 33850278.05, 35964598.97, 38078919.9,
          40193240.83, 42307561.76,
        ], //27
        [
          7692100.898, 9615126.122, 11538151.35, 13461176.57, 15384201.8,
          17307227.02, 19230252.24, 21153277.47, 23076302.69, 24999327.92,
          26922353.14, 28845378.37, 30768403.59, 32691428.82, 34614454.04,
          36537479.26, 38460504.49,
        ], //28
        [
          6980615.125, 8725768.907, 10470922.69, 12216076.47, 13961230.25,
          15706384.03, 17451537.81, 19196691.59, 20941845.38, 22686999.16,
          24432152.94, 26177306.72, 27922460.5, 29667614.28, 31412768.06,
          33157921.85, 34903075.63,
        ], //29
        [
          6346843.946, 7917573.67, 9497435.545, 11086429.57, 12675423.59,
          14264417.62, 15853411.64, 17442405.66, 19031399.69, 20620393.71,
          22209387.74, 23798381.76, 25387375.78, 6976369.81, 28565363.83,
          30154357.85, 31743351.88,
        ], //30

        [
          5731511.011, 7166563.085, 8601615.159, 10036667.23, 11471719.31,
          12906771.38, 14341823.46, 15776875.53, 17211927.6, 18646979.68,
          20082031.75, 21517083.83, 22952135.9, 24387187.97, 25822240.05,
          27257292.12, 28692344.2,
        ], // 31
        [
          5185238.663, 6485689.893, 7786141.123, 9086592.353, 10387043.58,
          11687494.81, 12987946.04, 14288397.27, 15588848.5, 16889299.73,
          18189750.96, 19490202.19, 20790653.42, 22091104.66, 23391555.89,
          24692007.12, 25992458.35,
        ], // 32
        [
          4693773.018, 5861299.751, 7036715.179, 8212130.607, 9387546.035,
          10562961.46, 11738376.89, 12913792.32, 14089207.75, 15264623.17,
          16440038.6, 17615454.03, 18790869.46, 19966284.89, 21141700.31,
          22317115.74, 23492531.17,
        ], // 33
        [
          4237355.713, 5289181.6, 6348520.528, 7407859.456, 8467198.385,
          9526537.313, 10585876.24, 11645215.17, 12704554.1, 13763893.03,
          14823231.95, 15882570.88, 16941909.81, 18001248.74, 19060587.67,
          20119926.6, 21179265.52,
        ], // 34
        [
          3813763.248, 4765415.24, 5724222.51, 6683029.781, 7641837.051,
          8600644.322, 9559451.592, 10518258.86, 11477066.13, 12435873.4,
          13394680.67, 14353487.94, 15312295.22, 16271102.49, 17229909.76,
          18188717.03, 19147524.3,
        ], // 35
        [
          3434533.506, 4293166.883, 5151800.259, 6010433.636, 6869067.013,
          7727700.389, 8586333.766, 9444967.142, 10303600.52, 11162233.9,
          12020867.27, 12879500.65, 13738134.03, 14596767.4, 15455400.78,
          16314034.15, 17172667.53,
        ], // 36
        [
          3089262.942, 3861578.678, 4633894.413, 5406210.149, 6178525.884,
          6950841.62, 7723157.355, 8495473.091, 9267788.826, 10040104.56,
          10812420.3, 11584736.03, 12357051.77, 13129367.5, 13901683.24,
          14673998.98, 15446314.71,
        ], // 37
        [
          2770740.701, 3467540.037, 4159811.845, 4852083.653, 5544355.46,
          6236627.268, 6928899.076, 7621170.884, 8313442.691, 9005714.499,
          9697986.307, 10390258.11, 11082529.92, 11774801.73, 12467073.54,
          13159345.35, 13851617.15,
        ], // 38
        [
          2491221.774, 3102272.472, 3726258.965, 4350245.459, 4974231.952,
          5598218.445, 6222204.939, 6846191.432, 7470177.926, 8094164.419,
          8718150.912, 9342137.406, 9966123.899, 10590110.39, 11214096.89,
          11838083.38, 12462069.87,
        ], // 39
        [
          2221613.415, 2803173.825, 3335776.851, 3890805.269, 4445833.686,
          4995255.756, 5555890.521, 6110918.938, 6665947.355, 7220975.773,
          7776004.19, 8331032.607, 8886061.024, 9441089.442, 9996117.859,
          10551146.28, 11106174.69,
        ], // 40
        [
          1983392.222, 2479240.278, 2974034.069, 3465256.785, 3961819.006,
          4458381.226, 4954943.446, 5451505.667, 5948067.887, 6444630.108,
          6941192.328, 7437754.548, 7934316.769, 8430878.989, 8927441.209,
          9424003.43, 9920565.65,
        ], // 41
        [
          1766902.032, 2208627.54, 2649348.867, 3086669.409, 3529075.074,
          3971480.739, 4413886.403, 4856292.068, 5298697.733, 5741103.398,
          6183509.063, 6625914.728, 7068320.393, 7510726.057, 7953131.722,
          8395537.387, 8837943.052,
        ], // 42
        [
          1567828.003, 1959785.004, 2351742.005, 2741123.222, 3133404.107,
          3525684.992, 3917965.877, 4310246.762, 4702527.647, 5094808.532,
          5487089.417, 5879370.303, 6271651.188, 6663932.073, 7056212.958,
          7448493.843, 7840774.728,
        ], // 43
        [
          1368133.415, 1710166.768, 2052200.122, 2430711.657, 2776638.364,
          3122565.07, 3457162.437, 3791759.803, 4126357.17, 4460954.537,
          4795551.903, 5130149.27, 5464746.637, 5799344.004, 6133941.37,
          6468538.737, 6803136.104,
        ], // 44
        [
          1227611.442, 1534514.303, 1841417.164, 2148320.024, 2455530.526,
          2758628.211, 3066118.617, 3373609.023, 3681099.428, 3988589.834,
          4296080.24, 4603570.646, 4911061.051, 5218551.457, 5526041.863,
          5833532.269, 6141022.674,
        ], // 45
        [
          1083244.629, 1354055.786, 1624866.943, 1895678.101, 2158708.154,
          2430638.445, 2702568.736, 2974499.027, 3246429.318, 3518359.608,
          3790289.899, 4062220.19, 4334150.481, 4606080.771, 4878011.062,
          5149941.353, 5421871.644,
        ], // 46
        [
          945630.2861, 1182037.858, 1418445.429, 1654853.001, 1891260.572,
          2135599.06, 2370674.33, 2605749.599, 2840824.869, 3075900.139,
          3310975.409, 3546050.678, 3781125.948, 4016201.218, 4251276.487,
          4486351.757, 4721427.027,
        ], // 47
        [
          831766.0273, 1039707.534, 1247649.041, 1455590.548, 1663532.055,
          1871473.561, 2075644.431, 2284347.253, 2493050.076, 2701752.898,
          2910455.72, 3119158.542, 3327861.364, 3536564.186, 3745267.008,
          3953969.831, 4162672.653,
        ], // 48
        [
          722780.3364, 903475.4205, 1084170.505, 1264865.589, 1445560.673,
          1626255.757, 1806950.841, 1987645.925, 2168341.009, 2349036.093,
          2529731.178, 2710426.262, 2891121.346, 3071816.43, 3252511.514,
          3433206.598, 3613901.682,
        ], // 49
        [
          628114.4672, 785143.084, 942171.7008, 1099200.318, 1256228.934,
          1413257.551, 1570286.168, 1724347.374, 1882670.686, 2040993.998,
          2195875.498, 2354198.81, 2512521.249, 2670843.687, 2829166.126,
          2987488.565, 3145811.003,
        ], // 50
      ];


      return tabulador[x][y];
    }
  };

export default CalculadoraMixin;